<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.GspwVersionMapper">
    <resultMap id="BaseResultMap" type="ywl.dto.GspwVersion">
        <id column="version_id" jdbcType="INTEGER" property="versionId"/>
        <result column="version_no" jdbcType="VARCHAR" property="versionNo"/>
        <result column="version_name" jdbcType="VARCHAR" property="versionName"/>
        <result column="version_force" jdbcType="INTEGER" property="versionForce"/>
        <result column="version_context" jdbcType="VARCHAR" property="versionContext"/>
        <result column="version_url" jdbcType="VARCHAR" property="versionUrl"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        version_id, version_no, version_name, version_force, version_context, version_url
    </sql>
    <select id="selectByExample" parameterType="ywl.dto.GspwVersionExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from gspw_version
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from gspw_version
        where version_id = #{versionId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from gspw_version
        where version_id = #{versionId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="ywl.dto.GspwVersionExample">
        delete from gspw_version
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="ywl.dto.GspwVersion">
        insert into gspw_version (version_id, version_no, version_name,
                                  version_force, version_context, version_url)
        values (#{versionId,jdbcType=INTEGER}, #{versionNo,jdbcType=VARCHAR}, #{versionName,jdbcType=VARCHAR},
                #{versionForce,jdbcType=INTEGER}, #{versionContext,jdbcType=VARCHAR}, #{versionUrl,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="ywl.dto.GspwVersion">
        insert into gspw_version
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="versionId != null">
                version_id,
            </if>
            <if test="versionNo != null">
                version_no,
            </if>
            <if test="versionName != null">
                version_name,
            </if>
            <if test="versionForce != null">
                version_force,
            </if>
            <if test="versionContext != null">
                version_context,
            </if>
            <if test="versionUrl != null">
                version_url,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="versionId != null">
                #{versionId,jdbcType=INTEGER},
            </if>
            <if test="versionNo != null">
                #{versionNo,jdbcType=VARCHAR},
            </if>
            <if test="versionName != null">
                #{versionName,jdbcType=VARCHAR},
            </if>
            <if test="versionForce != null">
                #{versionForce,jdbcType=INTEGER},
            </if>
            <if test="versionContext != null">
                #{versionContext,jdbcType=VARCHAR},
            </if>
            <if test="versionUrl != null">
                #{versionUrl,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="ywl.dto.GspwVersionExample" resultType="java.lang.Long">
        select count(*) from gspw_version
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update gspw_version
        <set>
            <if test="record.versionId != null">
                version_id = #{record.versionId,jdbcType=INTEGER},
            </if>
            <if test="record.versionNo != null">
                version_no = #{record.versionNo,jdbcType=VARCHAR},
            </if>
            <if test="record.versionName != null">
                version_name = #{record.versionName,jdbcType=VARCHAR},
            </if>
            <if test="record.versionForce != null">
                version_force = #{record.versionForce,jdbcType=INTEGER},
            </if>
            <if test="record.versionContext != null">
                version_context = #{record.versionContext,jdbcType=VARCHAR},
            </if>
            <if test="record.versionUrl != null">
                version_url = #{record.versionUrl,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update gspw_version
        set version_id = #{record.versionId,jdbcType=INTEGER},
        version_no = #{record.versionNo,jdbcType=VARCHAR},
        version_name = #{record.versionName,jdbcType=VARCHAR},
        version_force = #{record.versionForce,jdbcType=INTEGER},
        version_context = #{record.versionContext,jdbcType=VARCHAR},
        version_url = #{record.versionUrl,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="ywl.dto.GspwVersion">
        update gspw_version
        <set>
            <if test="versionNo != null">
                version_no = #{versionNo,jdbcType=VARCHAR},
            </if>
            <if test="versionName != null">
                version_name = #{versionName,jdbcType=VARCHAR},
            </if>
            <if test="versionForce != null">
                version_force = #{versionForce,jdbcType=INTEGER},
            </if>
            <if test="versionContext != null">
                version_context = #{versionContext,jdbcType=VARCHAR},
            </if>
            <if test="versionUrl != null">
                version_url = #{versionUrl,jdbcType=VARCHAR},
            </if>
        </set>
        where version_id = #{versionId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="ywl.dto.GspwVersion">
        update gspw_version
        set version_no      = #{versionNo,jdbcType=VARCHAR},
            version_name    = #{versionName,jdbcType=VARCHAR},
            version_force   = #{versionForce,jdbcType=INTEGER},
            version_context = #{versionContext,jdbcType=VARCHAR},
            version_url     = #{versionUrl,jdbcType=VARCHAR}
        where version_id = #{versionId,jdbcType=INTEGER}
    </update>
</mapper>